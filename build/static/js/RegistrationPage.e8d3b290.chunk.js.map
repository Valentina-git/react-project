{"version":3,"sources":["redux/selectors/notificSelectors.js","components/notification/Notification.styled.js","components/notification/Notification.js","redux/selectors/errorSelector.js","assets/images/loginRegistr/desktop-home.jpg","assets/images/loginRegistr/tablet-home.jpg","components/registrationForm/RegistrationFormStyled.js","components/registrationForm/RegistrationForm.js","pages/registration/RegistrationStyled.js","pages/registration/Registration.js"],"names":["getNotificState","state","notification","NotifWrapper","styled","div","props","error","alert","Notification","text","icon","style","marginRight","getError","RegistrationFormWrapper","initialState","username","email","password","RegistrationForm","validateSchema","yup","shape","typeError","required","min","max","dispatch","useDispatch","useHistory","useState","setState","useSelector","notifSelectors","errorSelectors","onHandleSubmit","values","a","authOperations","registerOperation","className","initialValues","validationSchema","onSubmit","isValid","dirty","isSubmitting","type","name","value","component","disabled","RegistrationWrapper","imageTablet","imageDesktop","Registration"],"mappings":"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","file":"static/js/RegistrationPage.e8d3b290.chunk.js","sourcesContent":["const getNotificState = state => state.notification;\r\n\r\nexport default {getNotificState};","import styled from 'styled-components';\r\n\r\nexport const NotifWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 5px;\r\n  font-size: 14px;\r\n  color: black;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  margin-bottom: 15px;\r\n  width: 250px;\r\n  height: auto;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 500px;\r\n    height: 40px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin: 0 auto;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  ${props =>\r\n    props.error &&\r\n    ` \r\n      background-color: pink;;\r\n      \r\n    `}\r\n  ${props =>\r\n    props.alert &&\r\n    ` \r\n        background-color: #fc842d;\r\n        font-family: Gotham Pro;\r\n        font-weight: bold;\r\n        font-size: 14px;\r\n        line-height: 13px;\r\n        letter-spacing: 0.04em;\r\n        color: white;\r\n        margin: 0 auto;\r\n        margin-bottom: 10px;\r\n      \r\n        box-shadow: 0px 4px 10px rgba(252,132,45,0.5);\r\n        border-radius: 20px;\r\n        border: none;\r\n        outline: none;\r\n\r\n        @media screen and (min-width: 768px) {\r\n          width: max-content;\r\n          margin-bottom: 15px;\r\n          \r\n      }\r\n      \r\n    `};\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NotifWrapper } from './Notification.styled';\r\n\r\nconst Notification = ({ text, icon = '', error = '', alert = '' }) => {\r\n  return (\r\n    <NotifWrapper error={error} alert={alert}>\r\n      <p>\r\n        <span style={{ marginRight: '10px' }}>{icon}</span>\r\n        {text}\r\n      </p>\r\n    </NotifWrapper>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","const getError = state => state.error;\r\n\r\nexport default {getError};","export default __webpack_public_path__ + \"static/media/desktop-home.d2f91e74.jpg\";","export default __webpack_public_path__ + \"static/media/tablet-home.d62494c2.jpg\";","import styled from 'styled-components';\r\n\r\nconst RegistrationFormWrapper = styled.div`\r\n  width: 290px;\r\n  //height: 427.5px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 382px;\r\n    //height: 324px;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 382px;\r\n    //height: 363px;\r\n  }\r\n\r\n  .error {\r\n    position: absolute;\r\n    top: calc(100% + 0.2em);\r\n\r\n    color: #e63946;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .pageTitle {\r\n    margin-bottom: 60px;\r\n    color: #fc842d;\r\n    font-family: Gotham Pro;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 0.93;\r\n    letter-spacing: 0.04em;\r\n    text-transform: uppercase;\r\n\r\n    @media (max-width: 767px) {\r\n      text-align: center;\r\n    }\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 40px;\r\n    }\r\n    @media (min-width: 1280px) {\r\n      margin-bottom: 60px;\r\n    }\r\n  }\r\n\r\n  .formLabel {\r\n    position: relative;\r\n\r\n    display: flex;\r\n    height: 35.5px;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    &:not(:last-child) {\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n\r\n  .formLabelText {\r\n    white-space: nowrap;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 1.2;\r\n    letter-spacing: 0.04em;\r\n    color: #9b9faa;\r\n  }\r\n\r\n  .formInput {\r\n    display: block;\r\n    padding-left: 20px;\r\n    flex-grow: 1;\r\n    border: 0;\r\n    background: transparent;\r\n  }\r\n  .formInput:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .formBtn {\r\n    display: block;\r\n    padding-bottom: 15px;\r\n    margin-top: 60px;\r\n    margin-bottom: 10px;\r\n    padding: 13px 34px;\r\n    border: 1px solid #fc842d;\r\n    background-color: #fff;\r\n    color: #fc842d;\r\n    border-radius: 30px;\r\n    width: 176px;\r\n    height: 44px;\r\n    margin-bottom: 15px;\r\n\r\n    @media (max-width: 767px) {\r\n      display: block;\r\n      margin: 0 auto;\r\n      margin-top: 60px;\r\n      margin-bottom: 15px;\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n   \r\n  }\r\n  .formBtn:hover,\r\n  .formBtn:focus {\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: #fc842d;\r\n    color: #fff;\r\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\r\n    margin-bottom: 15px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .formBtn {\r\n      margin-top: 40px;\r\n    }\r\n  }\r\n  @media (min-width: 1280px) {\r\n    .formBtn {\r\n      margin-top: 60px;\r\n    }\r\n  }\r\n\r\n  .formBtnText {\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 1.2;\r\n  }\r\n`;\r\n\r\nexport default RegistrationFormWrapper;\r\n","import { useState } from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport authOperations from '../../redux/operations/authOperations';\r\nimport RegistrationFormWrapper from './RegistrationFormStyled';\r\n\r\nimport errorSelectors from '../../redux/selectors/errorSelector';\r\nimport notifSelectors from '../../redux/selectors/notificSelectors';\r\nimport Notification from '../notification/Notification';\r\n\r\nconst initialState = {\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const validateSchema = yup.object().shape({\r\n    username: yup\r\n      .string()\r\n      .typeError(' Должно быть строкой ')\r\n      .required('!!! Введите ваше Имя =_='),\r\n    email: yup\r\n      .string()\r\n      .email(' Введите верный E-mail ')\r\n      .required('!!! Введите E-mail =_='),\r\n    password: yup\r\n      .string()\r\n      .min(8, 'Пароль не меньше 8 символов')\r\n      .max(16, 'Пароль не больше 16 символов')\r\n      .typeError('Должно быть строкой')\r\n      .required('!!! Введите Пароль =_= '),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [state, setState] = useState({ ...initialState });\r\n  const notification = useSelector(notifSelectors.getNotificState);\r\n  const error = useSelector(errorSelectors.getError);\r\n\r\n\r\n  const onHandleSubmit = async values => {\r\n    await dispatch(authOperations.registerOperation(values));\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <RegistrationFormWrapper>\r\n      <h2 className=\"pageTitle\">Регистрация</h2>\r\n\r\n      {notification && error && <Notification text={error} alert={true}/>}\r\n      {notification  && !error && <Notification text=\"Вы успешно зарегистрированы\" alert={true}/>}\r\n\r\n      <Formik\r\n        initialValues={{ username: '', email: '', password: '' }}\r\n        validationSchema={validateSchema}\r\n        onSubmit={values => {\r\n          onHandleSubmit(values);\r\n        }}\r\n      >\r\n        {({ values, isValid, dirty, isSubmitting }) => (\r\n          <Form>\r\n            <div className=\"form\">\r\n              <label className=\"formLabel\">\r\n                <span className=\"formLabelText\">Имя *</span>\r\n                <Field\r\n                  className=\"formInput\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={values.username}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"error\"\r\n                  name=\"username\"\r\n                  component=\"div\"\r\n                />\r\n              </label>\r\n\r\n              <label className=\"formLabel\">\r\n                <span className=\"formLabelText\">E-mail *</span>\r\n                <Field\r\n                  className=\"formInput\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                />\r\n                <ErrorMessage className=\"error\" name=\"email\" component=\"div\" />\r\n              </label>\r\n\r\n              <label className=\"formLabel\">\r\n                <span className=\"formLabelText\">Пароль *</span>\r\n                <Field\r\n                  className=\"formInput\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={values.password}\r\n                />\r\n                <ErrorMessage\r\n                  className=\"error\"\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            {!notification && <button\r\n              className=\"formBtn\"\r\n              type=\"submit\"\r\n              disabled={!isValid && !dirty && isSubmitting}\r\n            >\r\n              <span className=\"formBtnText\">Регистрация</span>\r\n            </button>}\r\n          </Form>\r\n        )}\r\n\r\n      </Formik>\r\n    </RegistrationFormWrapper>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import styled from 'styled-components';\r\n\r\nimport imageDesktop from '../../assets/images/loginRegistr/desktop-home.jpg';\r\nimport imageTablet from '../../assets/images/loginRegistr/tablet-home.jpg';\r\n\r\nconst RegistrationWrapper = styled.div`\r\n  padding-top: 120px;\r\n  padding-bottom: 101px;\r\n\r\n  width: 100%;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: right;\r\n\r\n  @media (min-width: 768px) {\r\n    padding-top: 237px;\r\n    padding-bottom: 466px;\r\n    background-image: url(${imageTablet});\r\n    position: absolute;\r\n    top: 0;\r\n    z-index: -100;\r\n    overflow: hidden;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    padding-top: 244px;\r\n    padding-bottom: 244px;\r\n    background-image: url(${imageDesktop});\r\n  }\r\n`;\r\n\r\nexport default RegistrationWrapper;\r\n","import RegistrationForm from '../../components/registrationForm/RegistrationForm';\r\nimport RegistrationWrapper from './RegistrationStyled';\r\n\r\nconst Registration = () => {\r\n  return (\r\n    <RegistrationWrapper>\r\n      <div className=\"container\">\r\n        <RegistrationForm />\r\n      </div>\r\n    </RegistrationWrapper>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"sourceRoot":""}